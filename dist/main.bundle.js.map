{"version":3,"sources":["C:/Git/xlsx-json-ang/src async","C:/Git/xlsx-json-ang/src/app/app-routing.module.ts","C:/Git/xlsx-json-ang/src/app/app.component.html","C:/Git/xlsx-json-ang/src/app/app.component.scss","C:/Git/xlsx-json-ang/src/app/app.component.ts","C:/Git/xlsx-json-ang/src/app/app.module.ts","C:/Git/xlsx-json-ang/src/app/components/card/card.component.html","C:/Git/xlsx-json-ang/src/app/components/card/card.component.scss","C:/Git/xlsx-json-ang/src/app/components/card/card.component.ts","C:/Git/xlsx-json-ang/src/app/components/layout/layout.component.html","C:/Git/xlsx-json-ang/src/app/components/layout/layout.component.scss","C:/Git/xlsx-json-ang/src/app/components/layout/layout.component.ts","C:/Git/xlsx-json-ang/src/app/components/table/table.component.html","C:/Git/xlsx-json-ang/src/app/components/table/table.component.scss","C:/Git/xlsx-json-ang/src/app/components/table/table.component.ts","C:/Git/xlsx-json-ang/src/environments/environment.ts","C:/Git/xlsx-json-ang/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../../../../src async recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Git/xlsx-json-ang/src async\n// module id = ../../../../../src async recursive\n// module chunks = 1","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    children: []\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// C:/Git/xlsx-json-ang/src/app/app-routing.module.ts","module.exports = \"<app-layout></app-layout>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Git/xlsx-json-ang/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = 1","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Git/xlsx-json-ang/src/app/app.component.scss\n// module id = ../../../../../src/app/app.component.scss\n// module chunks = 1","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'app';\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Git/xlsx-json-ang/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpModule } from '@angular/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ClarityModule } from 'clarity-angular';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CardComponent } from './components/card/card.component';\nimport { LayoutComponent } from './components/layout/layout.component';\nimport { TableComponent } from './components/table/table.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CardComponent,\n    LayoutComponent,\n    TableComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ClarityModule.forRoot(),\n    HttpModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// C:/Git/xlsx-json-ang/src/app/app.module.ts","module.exports = \"<div class=\\\"card\\\">\\n    <div class=\\\"card-header\\\">\\n        Upload your file here\\n    </div>\\n    <div class=\\\"card-block upload-container\\\">\\n        <input id=\\\"fileId\\\" type=\\\"file\\\" class=\\\"upload-file\\\" (change)='handleFile($event)' (drop)='handleFile($event)'>\\n        <label for=\\\"fileId\\\">Click here to upload</label>\\n    </div>\\n    <!-- <div class=\\\"card-footer\\\">\\n        <button class=\\\"btn btn-sm btn-link\\\">Submit</button>\\n    </div> -->\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Git/xlsx-json-ang/src/app/components/card/card.component.html\n// module id = ../../../../../src/app/components/card/card.component.html\n// module chunks = 1","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".card .upload-container {\\n  background-color: #FFE6E8;\\n  min-height: 200px;\\n  position: relative; }\\n  .card .upload-container .upload-file {\\n    min-height: 200px;\\n    width: 100%;\\n    opacity: 0;\\n    cursor: pointer; }\\n  .card .upload-container label {\\n    position: absolute;\\n    top: 50%;\\n    right: 50%; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Git/xlsx-json-ang/src/app/components/card/card.component.scss\n// module id = ../../../../../src/app/components/card/card.component.scss\n// module chunks = 1","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.scss']\n})\nexport class CardComponent implements OnInit {\n\n  @Output()\n  emitJSON = new EventEmitter<any>();\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n  handleFile(e) {\n    e.stopPropagation();\n    e.preventDefault();\n    let i, f, files;\n    if (e.type === 'drop') {\n      files = e.dataTransfer.files;\n    } else if (e.type === 'change') {\n      files = e.target.files;\n    }\n\n    for (i = 0, f = files[i]; i !== files.length; ++i) {\n      const reader = new FileReader();\n      const name = f.name;\n      reader.onload = (eve) => {\n        const data = eve.target['result'];\n        const workbook = XLSX.read(data, { type: 'binary' });\n        /* DO SOMETHING WITH workbook HERE */\n        // var sheet_name_list = workbook.SheetNames;\n        /* Get worksheet */\n        const worksheet = workbook.Sheets[workbook.SheetNames[0]];\n        const wsJSON = XLSX.utils.sheet_to_json(worksheet);\n        this.emitJSON.emit(wsJSON);\n      };\n      reader.readAsBinaryString(f);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Git/xlsx-json-ang/src/app/components/card/card.component.ts","module.exports = \"<div class=\\\"main-container\\\">\\n    <div class=\\\"alert alert-app-level alert-info\\\">\\n        <div class=\\\"alert-items\\\">\\n            <div class=\\\"alert-item static\\\">\\n                <div class=\\\"alert-icon-wrapper\\\">\\n                    <clr-icon class=\\\"alert-icon\\\" shape=\\\"info-circle\\\"></clr-icon>\\n                </div>\\n                <div class=\\\"alert-text\\\">\\n                    --- Convert to JSON ---\\n                </div>\\n                <div class=\\\"alert-actions\\\">\\n                    <button class=\\\"btn btn-sm alert-action\\\">Action</button>\\n                </div>\\n            </div>\\n        </div>\\n        <button aria-label=\\\"Close\\\" class=\\\"close\\\" type=\\\"button\\\">\\n        <clr-icon  aria-hidden=\\\"true\\\" shape=\\\"close\\\"></clr-icon>\\n    </button>\\n    </div>\\n    <header class=\\\"header header-6\\\">\\n        <div class=\\\"branding\\\">\\n            <a href=\\\"#\\\">\\n                <clr-icon shape=\\\"user\\\"></clr-icon>\\n                <span class=\\\"title\\\">Upload Experiment</span>\\n            </a>\\n        </div>\\n        <div class=\\\"header-nav\\\">\\n            <a class=\\\"nav-link nav-icon\\\" href=\\\"javascript://\\\">\\n                <clr-icon shape=\\\"cloud\\\"></clr-icon>\\n            </a>\\n            <a class=\\\"active nav-link nav-icon\\\" href=\\\"javascript://\\\">\\n                <clr-icon shape=\\\"folder\\\"></clr-icon>\\n            </a>\\n        </div>\\n    </header>\\n\\n    <div class=\\\"content-container\\\">\\n        <div class=\\\"content-area\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-lg-12 col-md-10 col-sm-12 col-xs-12\\\">\\n                    <app-card (emitJSON)='catchJSON($event)'></app-card>\\n                    <app-table [convertedJSON]='convertedJSON'></app-table>\\n                </div>\\n            </div>\\n        </div>\\n\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Git/xlsx-json-ang/src/app/components/layout/layout.component.html\n// module id = ../../../../../src/app/components/layout/layout.component.html\n// module chunks = 1","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Git/xlsx-json-ang/src/app/components/layout/layout.component.scss\n// module id = ../../../../../src/app/components/layout/layout.component.scss\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.scss']\n})\nexport class LayoutComponent implements OnInit {\n\n  convertedJSON = [];\n  constructor() { }\n\n  ngOnInit() {\n  }\n  catchJSON(obj) {\n    this.convertedJSON = obj;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Git/xlsx-json-ang/src/app/components/layout/layout.component.ts","module.exports = \"<div class=\\\"row\\\" *ngIf='convertedJSON.length>0'>\\n    <div class=\\\"col-sm-12\\\">\\n        <table class=\\\"table\\\">\\n            <thead>\\n                <tr>\\n                    <th class=\\\"left\\\">Name</th>\\n                    <th>Department</th>\\n                    <th>Unit</th>\\n                    <th>Skills </th>\\n                </tr>\\n            </thead>\\n            <tbody>\\n                <tr *ngFor='let obj of convertedJSON'>\\n                    <td class=\\\"left\\\">{{obj.Name}}</td>\\n                    <td>{{obj.Department}}</td>\\n                    <td>{{obj.Unit}}</td>\\n                    <td>{{obj.Skills}}</td>\\n                </tr>\\n            </tbody>\\n        </table>\\n    </div>\\n</div>\\n<div class=\\\"row\\\" *ngIf='convertedJSON.length===0'>\\n    <div class=\\\"col-sm-12\\\">\\n        <div class=\\\"alert alert-success\\\">\\n            <div class=\\\"alert-items\\\">\\n                <div class=\\\"alert-item static\\\">\\n                    <div class=\\\"alert-icon-wrapper\\\">\\n                        <clr-icon class=\\\"alert-icon\\\" shape=\\\"check-circle\\\"></clr-icon>\\n                    </div><span class=\\\"alert-text\\\"> Watch this space for details on excel after uploading\\n                    </span>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Git/xlsx-json-ang/src/app/components/table/table.component.html\n// module id = ../../../../../src/app/components/table/table.component.html\n// module chunks = 1","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Git/xlsx-json-ang/src/app/components/table/table.component.scss\n// module id = ../../../../../src/app/components/table/table.component.scss\n// module chunks = 1","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.scss']\n})\nexport class TableComponent implements OnInit {\n\n  @Input()\n  convertedJSON: any;\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Git/xlsx-json-ang/src/app/components/table/table.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// C:/Git/xlsx-json-ang/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// C:/Git/xlsx-json-ang/src/main.ts"],"sourceRoot":"webpack:///"}